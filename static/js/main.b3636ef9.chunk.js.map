{"version":3,"sources":["components/instructions/Instructions.js","components/container/Container.js","components/pictureCard/PictureCard.js","components/row/Row.js","App.js","index.js"],"names":["Instructions","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","startDialog","event","preventDefault","setState","stepCounter","state","dialog1","react_default","a","createElement","className","onClick","dialog2","endInstructions","Component","Container","children","PictureCard","data-id","id","handlePicClick","value","src","url","Row","App","gameStart","pictures","Pictures","clickedPictures","score","topScore","correctGuess","pics","shuffledPics","map","Math","random","sort","b","length","newClickedPics","push","filter","ids","console","log","_this2","container_Container","row_Row","picture","pictureCard_PictureCard","key","instructions_Instructions","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b3636ef9.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Instructions extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { stepCounter: 0 };\n    }\n\n    startDialog = event => {\n        event.preventDefault();\n\n        this.setState({ stepCounter: this.state.stepCounter + 1});\n    }\n\n    render() {\n        const dialog1 = (\n            <div className=\"arrow_box justify-content-md-center text-center\">\n                <p className=\"m-4\">You have arrived at..... CLICKY GAME!!! :^{\")\"}</p>\n                <button className=\"btn btn-primary mb-3\" onClick={this.startDialog}>How do I play?!</button>\n            </div>\n        );\n\n        const dialog2 = (\n            <div className=\"arrow_box justify-content-md-center text-center\">\n                <p className=\"m-4\">Click a picture. Try to remember which image you clicked. If you click the same picture after they are scrambled... you lose. If you click a different picture you gain a point. The game goes on forever... unlike life... ^{\")\"}.</p>\n                <button className=\"btn btn-primary mb-3\" onClick={this.props.endInstructions}>I get it, lets begin!</button>\n            </div>\n        );\n\n\n        return this.state.stepCounter === 0 ? dialog1 : dialog2;\n    }\n}\n\nexport default Instructions;","import React from 'react';\n\nfunction Container(props) {\n  return (\n    <div className=\"container\">{props.children}</div>\n  );\n}\n\nexport default Container;","import React from 'react';\n\nfunction PictureCard (props) {\n  return (\n    <div className=\"card pic-card col-3-md ml-4 mr-4 mt-2 p-3\" data-id={props.id} onClick={() => props.handlePicClick(props.value)}>\n      <img className=\"card-img-top\" src={props.url}></img>\n    </div>\n  );\n};\n\nexport default PictureCard;","import React, { Component } from 'react';\nimport Instructions from '../instructions';\nimport Container from '../container';\nimport Pictures from '../../pictures.json';\nimport PictureCard from '../pictureCard';\n\nfunction Row (props) {\n    return (\n      <div className=\"row mt-2 justify-content-md-center\">{props.children}</div>\n    );\n}\n\nexport default Row;","import React, { Component } from 'react';\nimport Row from './components/row';\nimport Instructions from './components/instructions';\nimport Container from './components/container';\nimport Pictures from './pictures.json';\nimport PictureCard from './components/pictureCard';\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    gameStart: false,\n    pictures: Pictures,\n    clickedPictures: [],\n    score: 0,\n    topScore: 0,\n    correctGuess: 3\n  }\n\n  endInstructions = () => {\n    this.setState({ gameStart: true });\n  }\n\n  handlePicClick = id => {\n    const pics = this.state.pictures;\n    const shuffleArray = arr => arr\n    .map(a => [Math.random(), a])\n    .sort((a, b) => a[0] - b[0])\n    .map(a => a[1]);\n    const shuffledPics = shuffleArray(pics);\n\n    if (this.state.clickedPictures.length === 0 ) {\n      const newClickedPics = this.state.clickedPictures;\n      newClickedPics.push(id);\n      this.setState({clickedPictures: newClickedPics, score: this.state.score + 1, pictures: shuffledPics, correctGuess: 1});\n    }\n    else {\n      const pastClicks = this.state.clickedPictures.filter(ids => ids == id);\n      if (pastClicks.length === 0) {\n        const newClickedPics = this.state.clickedPictures;\n        newClickedPics.push(id);\n        this.setState({clickedPictures: newClickedPics, score: this.state.score + 1, pictures: shuffledPics, correctGuess: 1});\n      }\n      else {\n        console.log(\"You lose :(\");\n        this.state.score > this.state.topScore ? this.setState({topScore: this.state.score, score: 0}) : this.setState({score: 0});\n        this.setState({clickedPictures: [], pictures: shuffledPics, correctGuess: 0});   \n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app-body\">\n        <nav className=\"shadow-lg navbar navbar-dark bg-dark \">\n          <ul className=\"p-0 m-0 w-100\">\n            <li><span className=\"navbar-brand mb-0 h1\">Clicky the picky!</span></li>\n            {this.state.correctGuess === 1 ? (<li className=\"correct\">You guessed correctly!</li>) : this.state.correctGuess === 3 ? ((<li className=\"spin\">:^{\")\"}</li>)) : (<li className=\"wrong\">You guessed incorrectly!</li>)}\n            <li>\n              Score: <span>{ this.state.score }</span> | Top Score: <span>{ this.state.topScore }</span>\n            </li>\n          </ul>\n        </nav>    \n        <div className=\"container-fluid\">\n          {this.state.gameStart ? \n          (<Container>\n            <Row>\n            {this.state.pictures.map(picture => {\n              return (\n                <PictureCard \n                value={picture.id}\n                key={picture.id}\n                url={picture.url}\n                handlePicClick={this.handlePicClick}\n                />\n              );\n            })}\n            </Row>\n          </Container>) : \n          (<Row>\n            <Instructions endInstructions={this.endInstructions} />\n          </Row>)\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}